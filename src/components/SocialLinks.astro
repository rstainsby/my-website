---
import { Icon } from "astro-icon/components";

const { PUBLIC_GITHUB_URL, PUBLIC_CODEPEN_URL, PUBLIC_LINKEDIN_URL } = import.meta.env;

interface Props {
  groupClass?: string;
  linkClass?: string;
  iconClass?: string;
}

interface SocialLink {
  name: string;
  url: string;
  icon: string;
}

const socialLinks: SocialLink[] = [
  {
    name: 'Github',
    url: PUBLIC_GITHUB_URL,
    icon: 'mdi_github'
  },
  {
    name: 'Codepen',
    url: PUBLIC_CODEPEN_URL,
    icon: 'mdi_codepen'
  },
  {
    name: 'LinkedIn',
    url: PUBLIC_LINKEDIN_URL,
    icon: 'mdi_linkedin'
  }
]

const { groupClass, linkClass, iconClass } = Astro.props;
---

<ul class:list={["social-links", groupClass]}>
  {
    socialLinks.map((link) => (
      <li>
        <a class:list={["icon-link", linkClass]} href={link.url}>
          <Icon name={link.icon} class:list={["icon", iconClass]} />
        </a>
      </li>
    ))
  }
</ul>

<style scoped>
  ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }
  
  .social-links {
    display: grid;
    grid-template-columns: repeat(3, 3rem);
    gap: 1rem;
  }

  .icon-link {
    text-decoration: none;
    color: inherit;
  }

  .icon {
    display: block;
    height: clamp(2.5rem, 2.5vw + 2rem, 3rem);
    width: clamp(2.5rem, 2.5vw + 2rem, 3rem);
    color: var(--cl-secondary);
    transition: 0.3s ease;
  }

  .icon:hover, .icon:focus {
    color: var(--cl-primary);
    transform: scale(1.1);
  }

  .icon:active {
    transform: scale(0.9);
  }

  .icon-link:focus-visible{
    color: var(--cl-primary);
    outline-color: var(--cl-primary);
    outline-width: 2px;
  }

  .icon-link:focus > .icon {
    color: var(--cl-primary);
  }
  
</style>